demo()
help()
help.start()
install.packages("shiny")
install.packages("learnr")
library(shiny)
detach("package:shiny", unload = TRUE)
clear()
pwd
lint(excercise.R)
library(lintr)
install.packages(lintr)
install.packages("lintr)
install.packages("lintr")
library(lintr)
lint("exercise.R")
lint("/Users/duanemorgan/Code/R/book-exercises/chapter-06-exercises/exercise-1/exercise.R")
lint("/Users/duanemorgan/Code/R/book-exercises/chapter-06-exercises/exercise-1/exercise.R")
lint("/Users/duanemorgan/Code/R/book-exercises/chapter-06-exercises/exercise-1/exercise.R")
lint("/Users/duanemorgan/Code/R/book-exercises/chapter-06-exercises/exercise-1/exercise.R")
lint("/Users/duanemorgan/Code/R/book-exercises/chapter-06-exercises/exercise-1/exercise.R")
lint("/Users/duanemorgan/Code/R/book-exercises/chapter-06-exercises/exercise-1/exercise.R")
lint("/Users/duanemorgan/Code/R/book-exercises/chapter-06-exercises/exercise-1/exercise.R")
install.packages("styler")
install.packages("style_file")
install.packages(c("class", "foreign", "MASS", "Matrix", "mgcv", "nlme", "nnet", "rpart", "spatial"), lib="/usr/local/Cellar/r/4.1.2/lib/R/library")
lint exercises.R
lint("exercises.R")
lint("./exercises.R")
library(lintr)
lint("./exercises.R")
lint("exercises.R")
ls
lint(exercises.R)
lint("/Users/duanemorgan/Code/R/book-exercises/chapter-06-exercises/exercise-2/exercise.R")
print(paste(intro, fruits_o))
# Create a new variable `lyric_e` that is the `intro` combined with the new
# `fruits_e` ending. Print out this variable
lyric_e <- paste(intro, fruits_e)
# Use the `substr()` function to extract the 15th through the last letter
# of the `lyric`, and store the result in a variable called `fruits`
# Hint: use `nchar()` to determine how many total letters there are!
fruits <- substr(lyric, 15, nchar(lyric))
# Exercise 2: using built-in string functions
# Create a variable `lyric` that contains the text "I like to eat apples and
# bananas"
lyric <- "I like to eat apples and bananas"
# Use the `substr()` function to extract the 1st through 13th letters from the
# `lyric`, and store the result in a variable called `intro`
# Use `?substr` to see more about this function
intro <- substr(lyric, 1, 13)
# Use the `substr()` function to extract the 15th through the last letter
# of the `lyric`, and store the result in a variable called `fruits`
# Hint: use `nchar()` to determine how many total letters there are!
fruits <- substr(lyric, 15, nchar(lyric))
# Use the `gsub()` function to substitute all the "a"s in `fruits` with "ee".
# Store the result in a variable called `fruits_e`
# Hint: see http://www.endmemo.com/program/R/sub.php for a simpmle example (or
# use `?gsub`)
fruits_e <- gsub("a", "ee", fruits)
# Use the `gsub()` function to substitute all the "a"s in `fruits` with "o".
# Store the result in a variable called `fruits_o`
fruits_o <- gsub("a", "o", fruits)
# Create a new variable `lyric_e` that is the `intro` combined with the new
# `fruits_e` ending. Print out this variable
lyric_e <- paste(intro, fruits_e)
print(lyric_e)
# Without making a new variable, print out the `intro` combined with the new
# `fruits_o` ending
print(paste(intro, fruits_o))
# Exercise 2: using built-in string functions
# Create a variable `lyric` that contains the text "I like to eat apples and
# bananas"
lyric <- "I like to eat apples and bananas"
# Use the `substr()` function to extract the 1st through 13th letters from the
# `lyric`, and store the result in a variable called `intro`
# Use `?substr` to see more about this function
intro <- substr(lyric, 1, 13)
# Use the `substr()` function to extract the 15th through the last letter
# of the `lyric`, and store the result in a variable called `fruits`
# Hint: use `nchar()` to determine how many total letters there are!
fruits <- substr(lyric, 15, nchar(lyric))
# Use the `gsub()` function to substitute all the "a"s in `fruits` with "ee".
# Store the result in a variable called `fruits_e`
# Hint: see http://www.endmemo.com/program/R/sub.php for a simpmle example (or
# use `?gsub`)
fruits_e <- gsub("a", "ee", fruits)
# Use the `gsub()` function to substitute all the "a"s in `fruits` with "o".
# Store the result in a variable called `fruits_o`
fruits_o <- gsub("a", "o", fruits)
# Create a new variable `lyric_e` that is the `intro` combined with the new
# `fruits_e` ending. Print out this variable
lyric_e <- paste(intro, fruits_e)
print(lyric_e)
# Without making a new variable, print out the `intro` combined with the new
# `fruits_o` ending
print(paste(intro, fruits_o))
lyric_e <- paste(intro, fruits_e)
print(lyric_e)
print(paste(intro, fruits_o))
# Exercise 2: using built-in string functions
# Create a variable `lyric` that contains the text "I like to eat apples and
# bananas"
lyric <- "I like to eat apples and bananas"
# Use the `substr()` function to extract the 1st through 13th letters from the
# `lyric`, and store the result in a variable called `intro`
# Use `?substr` to see more about this function
intro <- substr(lyric, 1, 13)
# Use the `substr()` function to extract the 15th through the last letter
# of the `lyric`, and store the result in a variable called `fruits`
# Hint: use `nchar()` to determine how many total letters there are!
fruits <- substr(lyric, 15, nchar(lyric))
# Use the `gsub()` function to substitute all the "a"s in `fruits` with "ee".
# Store the result in a variable called `fruits_e`
# Hint: see http://www.endmemo.com/program/R/sub.php for a simpmle example (or
# use `?gsub`)
fruits_e <- gsub("a", "ee", fruits)
# Use the `gsub()` function to substitute all the "a"s in `fruits` with "o".
# Store the result in a variable called `fruits_o`
fruits_o <- gsub("a", "o", fruits)
# Create a new variable `lyric_e` that is the `intro` combined with the new
# `fruits_e` ending. Print out this variable
lyric_e <- paste(intro, fruits_e)
print(lyric_e)
# Without making a new variable, print out the `intro` combined with the new
# `fruits_o` ending
print(paste(intro, fruits_o))
# Exercise 2: using built-in string functions
# Create a variable `lyric` that contains the text "I like to eat apples and
# bananas"
lyric <- "I like to eat apples and bananas"
# Use the `substr()` function to extract the 1st through 13th letters from the
# `lyric`, and store the result in a variable called `intro`
# Use `?substr` to see more about this function
intro <- substr(lyric, 1, 13)
# Use the `substr()` function to extract the 15th through the last letter
# of the `lyric`, and store the result in a variable called `fruits`
# Hint: use `nchar()` to determine how many total letters there are!
fruits <- substr(lyric, 15, nchar(lyric))
# Use the `gsub()` function to substitute all the "a"s in `fruits` with "ee".
# Store the result in a variable called `fruits_e`
# Hint: see http://www.endmemo.com/program/R/sub.php for a simpmle example (or
# use `?gsub`)
fruits_e <- gsub("a", "ee", fruits)
# Use the `gsub()` function to substitute all the "a"s in `fruits` with "o".
# Store the result in a variable called `fruits_o`
fruits_o <- gsub("a", "o", fruits)
# Create a new variable `lyric_e` that is the `intro` combined with the new
# `fruits_e` ending. Print out this variable
lyric_e <- paste(intro, fruits_e)
print(lyric_e)
# Without making a new variable, print out the `intro` combined with the new
# `fruits_o` ending
print(paste(intro, fruits_o))
setwd("~/Code/R/book-exercises/chapter-06-exercises/exercise-3")
setwd("~/")
setwd("~/Code/R/book-exercises/chapter-06-exercises/exercise-3")
setwd("~/Code/R/book-exercises/chapter-06-exercises/exercise-4")
setwd("~/Code/R/book-exercises/chapter-06-exercises/exercise-3")
lint (exercise.R)
lint ("exercise.R)
lint ("exercise.R")
lint ("exercise.R")
lint ("exercise.R")
setwd("~/Code/R/book-exercises/chapter-06-exercises/exercise-4")
lint ("exercise.R")
lint ("exercise.R")
lint ("exercise.R")
setwd("~/Code/R/book-exercises/chapter-07-exercises/exercise-1")
m <- 10:1
print m
print(m)
print(m - n)
n <- 10:49
print(m - n)
x_range <- seq(-5, 10, .1)
print x_range
print (x_range)
print(n)
n <- n + 1
print(n)
# Add 1 to each element in `n` and print the result
n <- n + 1
git s
# Create a vector `m` that contains the numbers 10 to 1 (in that order).
# Hint: use the `seq()` function
m <- 10:1
# Subtract `m` FROM `n`. Note the recycling!
print(m - n)
print(m())
print(,)
print(m)
print(n)
print(m)
print(n)
n < 10:49
n <- 10:49
n <- n + 1
m <- 10:1
print(m)
print(n)
print(m-n)
x <- 10:20
y <- 1:10
x - y
x - y
x <- 10:19
x - y
x <- 10:20
y <- 1:10
colors <Â­ c("Green", "Blue")
colors <- c("Green", "Blue")
locations <- c("sky", "grass")
band <- paste(colors, locations, sep = "") # returns "Greensky" "Bluegrass
print(band <- paste(colors, locations, sep = "") # returns "Greensky" "Bluegrass)
print(band <- paste(colors, locations, sep = "")) # returns "Greensky" "Bluegrass
shiny::runGadget(sparklyr::connection_spark_shinyapp(), viewer = .rs.embeddedViewer)
library(sparklyr)
library(dplyr)
spark_install(version = "2.4.3", hadoop_version = "2.7")
sc <- spark_connect(master = "local")
shiny::runGadget(sparklyr::connection_spark_shinyapp(), viewer = .rs.embeddedViewer)
install.packages("devtools::install_github("r-dbi/odbc")")
install.packages("odbc")
install.packages("readr")
install.packages("sqlutils")
install.packages("odbc")
